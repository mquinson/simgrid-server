variables:
  GIT_SUBMODULE_STRATEGY: none

stages:
  - build
  - sonar

build_test_nix:
  image: simgrid/ci-empty-nixos
  stage: build
  script:
    - export NIX_ARGS="--arg doCoverage true --arg coverageCoveralls true --arg coverageGcovTxt true"
    # Update external cache.
    - nix-shell --pure ${NIX_ARGS} --command ${CI_PROJECT_DIR}/tools/ci/list-store-paths-for-cachix.bash | cachix push simgrid
    # Build and test, with coverage.
    - nix-build ${NIX_ARGS} && cp -rL result ./rsg
    # Print coverage textual report, so Gitlab can attribute a coverage metrics to this job.
    - cat ./rsg/cov-report/file-summary.txt
    # Put gcov file at the right tree depth
    - cp -r rsg/cov-report/gcov-txt ./
    # Upload coverage data to codecov.io
    - bash <(curl -s https://codecov.io/bash) -f ./rsg/cov-report/coveralls.json
  artifacts:
    when: always
    paths:
      - /builds/simgrid/remote-simgrid/gcov-txt

# pages:
#   image: simgrid/ci-empty-nixos
#   stage: deploy
#   dependencies:
#     - build_test_nix
#   script:
#     - mkdir -p public/coverage
#     - mv rsg/cov/report-html/* public/coverage/
#   artifacts:
#     paths:
#     - public
#   only:
#   - master

sonar_static_analysis:
  image: simgrid/stable:v3.29
  stage: sonar
  dependencies:
    - build_test_nix
  script:
    ######################
    # Dependencies setup #
    ######################
    - apt-get update
    - apt-get install -y build-essential pkg-config meson ninja-build libboost-dev protobuf-compiler libprotobuf-dev # needed by rsg
    - apt-get install -y python3 # needed by tesh
    - apt-get install -y curl unzip default-jre-headless # needed by sonar
    # manual docopt-c++ install
    - apt-get install -y curl cmake
    - export DOCOPT_REV=3394186f2951d3c7de3745b8c12dd930fe858768
    - (cd / && curl -L "https://github.com/mpoquet/docopt.cpp/tarball/${DOCOPT_REV}" | tar -xz)
    - (cd /mpoquet-docopt.cpp-3394186 && cmake . && make install)
    ##################
    # RSG build/test #
    ##################
    - meson build
    - ./sonarqube.sh ninja -C build -v

# Test that the git version of RSG compiles with various versions of SimGrid docker image
# The script is very similar to above, without sonar
.build_git: &build_git
  stage: build
  script:
    - apt-get update
    - apt-get install -y cmake build-essential libzmq3-dev libthrift-dev thrift-compiler libboost-dev libboost-program-options-dev
    - apt-get install -y python3 # needed by tesh
    - cmake . -DCMAKE_BUILD_TYPE=Debug -Denable_warnings=ON -Dtreat_warnings_as_errors=OFF
    - make -j $(nproc) VERBOSE=1
    - ctest --output-on-failure

test-git-sg3.29:
  image: simgrid/stable:v3.29
  <<: *build_git

#Â Older versions are broken because of the killed MailboxPtr type

#test-git-v3.21:
#  image: simgrid/stable:v3_21
#  <<: *build_git
